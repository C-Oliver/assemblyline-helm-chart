---
apiVersion: v1
kind: Secret
metadata:
  name: datastore-passwords
type: Opaque
data:
  kibana: {{ .Values.kibanaInternalPassword | b64enc}}
  apm: {{ .Values.apmInternalPassword | b64enc}}
  temporarySetup: {{ .Values.elasticSetupPassword | b64enc }}
  filebeat: {{ .Values.filebeatInternalPassword | b64enc }}
  metricbeat: {{ .Values.metricbeatInternalPassword | b64enc }}
---
apiVersion: v1
kind: Service
metadata:
  name: datastore
  labels:
    app: assemblyline
    section: core
    component: datastore
spec:
  clusterIP: None
  selector:
    app: assemblyline
    section: core
    component: datastore
  ports:
  - protocol: TCP
    port: 9200
    targetPort: 9200
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: datastore
spec:
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: datastore
  serviceName: datastore
  replicas: 1
  template:
    metadata:
      labels:
        app: assemblyline
        section: core
        component: datastore
    spec:
      terminationGracePeriodSeconds: 60
      priorityClassName: al-infra
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
      - name: elasticsearch
        env:
        - name: ES_JAVA_OPTS
          value: '-Xms8192m -Xmx8192m'
        - name: DISCOVERY_TYPE
          value: 'single-node'
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: datastore-passwords
              key: temporarySetup
        image: sgaroncse/elasticsearch:7.4.0
        securityContext:
          capabilities:
            drop:
            - ALL
          # readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
#        livenessProbe:
#          httpGet:
#            path: _cluster/health
#            port: 9200
#          periodSeconds: 60
#          timeoutSeconds: 60
#          failureThreshold: 10
        resources:
          requests:
            memory: 10Gi
            cpu: 1
          limits:
            memory: 10Gi
            cpu: 4
        ports:
        - containerPort: 9200
        volumeMounts:
        - name: datastore-data
          mountPath: /usr/share/elasticsearch/data
  volumeClaimTemplates:
  - metadata:
      name: datastore-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.storage.datastore }}
      resources:
        requests:
          storage: 500Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: setup-elastic
  labels:
    app: assemblyline
    section: core
    component: setup-elastic
spec:
  template:
    metadata:
      labels:
        app: assemblyline
        section: core
        component: setup-elastic
    spec:
      restartPolicy: Never
      containers:
      - name: setup-elastic
        image: cccs/assemblyline-core:{{ .Values.coreVersion }}
        command: ['python', '-m', 'assemblyline.run.setup_elastic']
        imagePullPolicy: Always
        env:
          - name: ELASTIC_HOST
            value: datastore
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: datastore-passwords
                key: temporarySetup
          - name: SU_USERNAME
            value: {{ .Values.kibanaAdminUser }}
          - name: SU_PASSWORD
            value: {{ .Values.kibanaAdminPassword }}
          - name: AL_PASSWORD
            value: {{ .Values.assemblylineElasticPassword }}
  backoffLimit: 500
  ttlSecondsAfterFinished: 0
---
