apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-server
  labels:
    app: assemblyline
    section: core
    component: service-server
spec:
  replicas: {{ .Values.serviceServerInstances }}
  revisionHistoryLimit: {{ .Values.revisionCount }}
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: service-server
  template:
    metadata:
      labels:
        app: assemblyline
        section: core
        component: service-server
    spec:
      priorityClassName: al-core-priority
      serviceAccountName: {{ .Values.coreServiceAccountName }}
      affinity:
        nodeAffinity:
          {{ include "assemblyline.nodeAffinity" . | indent 10 }}
      containers:
        - name: service-server
          image: {{ .Values.assemblylineServiceAPIImage }}:{{ .Values.release }}
          imagePullPolicy: Always
          {{ if .Values.enableCoreDebugging}}
          command: ["python", "-m", "debugpy", "--listen", "localhost:5678", "-m", "assemblyline_service_server.app"]
          {{ end }}
          volumeMounts:
          {{ if .Values.enableInternalEncryption }}
            - name: service-server-cert
              mountPath: "/etc/assemblyline/ssl/service-server/"
              readOnly: true
          {{ end }}
          {{ include "assemblyline.coreMounts" . | indent 12 }}
          ports:
            - containerPort: 5003
          env:
          {{ include "assemblyline.coreEnv" . | indent 12 }}
            - name: WORKERS
              value: '2'
          {{ if .Values.enableInternalEncryption }}
            - name: CERTFILE
              value: '/etc/assemblyline/ssl/service-server/{{ default "tls" .Values.tlsSecretProvider.tlsObjectName }}.crt'
            - name: KEYFILE
              value: '/etc/assemblyline/ssl/service-server/{{ default "tls" .Values.tlsSecretProvider.tlsObjectName }}.key'
          {{ end}}
          resources:
            limits:
              cpu: {{.Values.serviceServerLimCPU}}
              memory: {{.Values.serviceServerLimRam}}
            requests:
              cpu: {{ .Values.serviceServerReqCPU }}
              memory: {{ .Values.serviceServerReqRam }}
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: 5003
              scheme: {{ ternary "HTTPS" "HTTP" .Values.enableInternalEncryption }}
            timeoutSeconds: 5
            periodSeconds: 60
          startupProbe:
            httpGet:
              path: /healthz/ready
              port: 5003
              scheme: {{ ternary "HTTPS" "HTTP" .Values.enableInternalEncryption }}
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 5003
              scheme: {{ ternary "HTTPS" "HTTP" .Values.enableInternalEncryption }}
            timeoutSeconds: 5
            periodSeconds: 60
      volumes:
      {{ if and .Values.enableInternalEncryption .Values.useSharedTLSCert }}    
        - name: service-server-cert
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .Values.tlsSecretProvider.className }}
      {{ else if .Values.enableInternalEncryption }}
        - name: service-server-cert
          secret:
            secretName: service-server-cert
      {{ end }}
      {{ include "assemblyline.coreVolumes" . | indent 8 }}
