apiVersion: v1
kind: Pod
metadata:
  name: {{ .Release.Name }}-dispatcher-submissions
  labels:
    app: assemblyline-{{ .Release.Name }}
    section: core
    component: dispatcher-submissions
spec:
  containers:
    - name: al-dispatch-submissions
      image: cccs/assemblyline-core:{{ .Values.coreVersion }}
      imagePullPolicy: Always
      command: ['python', '-m', 'al_core.dispatching.run_submissions']
      volumeMounts:
        - name: al-config
          mountPath: /etc/assemblyline/
  volumes:
    - name: al-config
      configMap:
        name: {{ .Release.Name }}-global-config
        items:
          - key: config
            path: config.yml
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-dispatcher-submissions
spec:
  clusterIP: None  # AL services are headless, and communicate through redis
  selector:
    app: assemblyline-{{ .Release.Name }}
    section: core
    component: dispatcher-submissions
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ .Release.Name }}-dispatcher-files
  labels:
    app: assemblyline-{{ .Release.Name }}
    section: core
    component: dispatcher-files
spec:
  containers:
    - name: al-dispatch-files
      image: cccs/assemblyline-core:{{ .Values.coreVersion }}
      imagePullPolicy: Always
      command: ['python', '-m', 'al_core.dispatching.run_files']
      volumeMounts:
        - name: al-config
          mountPath: /etc/assemblyline/
  volumes:
    - name: al-config
      configMap:
        name: {{ .Release.Name }}-global-config
        items:
          - key: config
            path: config.yml
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-dispatcher-files
spec:
  clusterIP: None  # AL services are headless, and communicate through redis
  selector:
    app: assemblyline-{{ .Release.Name }}
    section: core
    component: dispatcher-files
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ .Release.Name }}-watcher
  labels:
    app: assemblyline-{{ .Release.Name }}
    section: core
    component: watcher
spec:
  containers:
    - name: al-dispatch-files
      image: cccs/assemblyline-core:{{ .Values.coreVersion }}
      imagePullPolicy: Always
      command: ['python', '-m', 'al_core.watcher.run_watcher']
      volumeMounts:
        - name: al-config
          mountPath: /etc/assemblyline/
  volumes:
    - name: al-config
      configMap:
        name: {{ .Release.Name }}-global-config
        items:
          - key: config
            path: config.yml
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-watcher
spec:
  clusterIP: None  # AL services are headless, and communicate through redis
  selector:
    app: assemblyline-{{ .Release.Name }}
    section: core
    component: watcher
