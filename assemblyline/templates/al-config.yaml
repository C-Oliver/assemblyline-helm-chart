# The assemblyline config that will be projected into all the assemblyline pods
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-global-config
data:
  config: |
    core:
      alerter:
        delay: 0
      metrics:
        apm_server:
          server_url: http://{{ .Release.Name }}_apm_server:8200/
        elasticsearch:
          hosts: ["{{ .Release.Name }}-datastore"]
        kibana:
          host: {{ .Release.Name }}-kibana
        redis:
          host: {{ .Release.Name }}-redis-volatile
          port: 6379
      redis:
        nonpersistent:
          host: {{ .Release.Name }}-redis-volatile
          port: 6379
        persistent:
          host: {{ .Release.Name }}-redis-persistent
          port: 6379
    datastore:
      elasticsearch:
        nodes: [{{ .Release.Name }}-datastore:9200]
      hosts: [{{ .Release.Name }}-datastore:9200]
    filestore:
      cache: ["s3://al_storage_key:Ch@ngeTh!sPa33w0rd@{{ .Release.Name }}-filestore:9000?s3_bucket=al-cache&use_ssl=False"]
      storage: ["s3://al_storage_key:Ch@ngeTh!sPa33w0rd@{{ .Release.Name }}-filestore:9000?s3_bucket=al-storage&use_ssl=False"]
    logging:
      log_to_console: true
      log_to_file: false
      log_to_syslog: false
    ui:
      debug: true
  nginx.conf: |
    server {
        server_name               {{ .Values.net.domain }};
        listen                    443 ssl;
        charset                   utf-8;
        client_max_body_size      {{ .Values.net.maxBodySize }};

        ssl_session_cache         shared:SSL:20m;
        ssl_session_timeout       60m;
        ssl_prefer_server_ciphers on;
        ssl_ciphers               ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DHE+AES128:!ADH:!AECDH:!MD5;
        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;

        ssl_certificate           /etc/ssl/nginx.crt;
        ssl_certificate_key       /etc/ssl/nginx.key;

        server_tokens off;

        location / {
            try_files    $uri @alweb;
        }

        location /socket.io/ {
            add_header            Strict-Transport-Security    "max-age=31536000; includeSubDomains";

            proxy_set_header      X-Remote-User   $remote_user;
            proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header      Host            $http_host;
            proxy_redirect        off;
            proxy_buffering       off;
            proxy_http_version    1.1;
            proxy_set_header      Upgrade         $http_upgrade;
            proxy_set_header      Connection      "upgrade";

            proxy_pass            http://{{ .Release.Name }}-socketio:5002;
        }

        location @alweb {
            add_header            X-Frame-Options            SAMEORIGIN;
            add_header            Strict-Transport-Security  "max-age=31536000; includeSubDomains";

    	    proxy_set_header      X-Forwarded-For            $proxy_add_x_forwarded_for;
            proxy_set_header      X-Remote-Cert-Verified     $ssl_client_verify;
            proxy_set_header      X-Remote-DN                $ssl_client_s_dn;
            proxy_set_header      Host                       $http_host;
            proxy_set_header      Scheme                     $scheme;
            proxy_set_header      Server-Port                $server_port;

            proxy_pass            http://{{ .Release.Name }}-ui:5000;
        }
    }
  http_redirect.conf: |
    server {
        server_name              _;
        listen                   80;
        listen                   [::]:80;

        location / {
            return 301 https://$host;
        }
    }